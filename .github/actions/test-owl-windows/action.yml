name: test-owl-windows
description: Tests owl on Windows environments.

inputs:
  target:
    description: The target triple being tested.
    required: true
  rust_toolchain:
    description: The Rust toolchain to use.
    required: true

runs:
  using: composite
  steps:
    - name: Get Rust toolchain
      id: get_rust_toolchain
      shell: pwsh
      run: |
        $releases = curl -sSLf https://api.github.com/repos/tomwright/dasel/releases/latest
        Invoke-WebRequest -Uri (($releases | ConvertFrom-Json).assets `
          | Where-Object { $_.name -eq "dasel_windows_amd64.exe" } `
          | Select-Object -ExpandProperty browser_download_url) `
          -OutFile dasel.exe

        [string] $rust_toolchain = .\dasel.exe --write plain --file rust-toolchain.toml 'toolchain.channel'
        "rust_toolchain=$rust_toolchain" >> $env:GITHUB_OUTPUT

    - name: Setup Rust cache toolchain
      run: rustup toolchain install ${{ steps.get_rust_toolchain.outputs.rust_toolchain }} --profile default
      shell: pwsh

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Check if target bindings exist
      id: check_bindings_exist
      shell: pwsh
      run: |
        if (Test-Path -path 'cec_sys\src\bindings\${{ inputs.target }}.rs' -PathType Leaf) {
          'bindings_exist=true' >> $env:GITHUB_OUTPUT
        } else {
          'bindings_exist=false' >> $env:GITHUB_OUTPUT
        }

    - name: Generate missing bindings
      if: steps.check_bindings_exist.outputs.bindings_exist == 'false'
      run: cargo run --bin cec_bindgen
      shell: pwsh

    - name: Run debug tests
      run: cargo test
      shell: pwsh

    - name: Run release tests
      run: cargo test --release
      shell: pwsh

    - name: Regenerate bindings
      if: steps.check_bindings_exist.outputs.bindings_exist == 'true'
      run: cargo run --bin cec_bindgen
      shell: pwsh

    - name: Commit bindings
      if: steps.check_bindings_exist.outputs.bindings_exist == 'true'
      uses: EndBug/add-and-commit@v9
      with:
        add: cec_sys/src/bindings/${{ inputs.target }}.rs
        message: Update ${{ inputs.target }} libcec bindings
        pathspec_error_handling: exitImmediately
