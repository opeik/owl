name: test-owl-unix
description: Tests owl on Unix environments.

inputs:
  target:
    description: The target triple being tested.
    required: true

runs:
  using: composite
  steps:
    - name: Install Nix
      uses: DeterminateSystems/nix-installer-action@main

    - name: Get Rust toolchain
      id: get_rust_toolchain
      shell: bash
      run: |
        rust_toolchain="$(nix develop --command dasel --write plain --file rust-toolchain.toml 'toolchain.channel')"
        echo "rust_toolchain=$rust_toolchain" >> "$GITHUB_OUTPUT"

    - name: Setup Rust cache toolchain
      run: rustup toolchain install ${{ steps.get_rust_toolchain.outputs.rust_toolchain }} --profile default
      shell: bash

    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2

    - name: Check if target bindings exist
      id: check_bindings_exist
      shell: bash
      run: |
        if [ -f 'cec_sys/src/bindings/${{ inputs.target }}.rs'  ]; then
          echo 'bindings_exist=false' >> "$GITHUB_OUTPUT"
        else
          echo 'bindings_exist=true' >> "$GITHUB_OUTPUT"
        fi

    - name: Generate missing bindings
      if: ${{ steps.check_bindings_exist.outputs.bindings_exist }} == 'false'
      run: nix develop --command cargo run --bin cec_bindgen
      shell: bash

    - name: Run debug tests
      run: nix develop --command cargo test
      shell: bash

    - name: Run release tests
      run: nix develop --command cargo test --release
      shell: bash

    - name: Regenerate bindings
      if: ${{ steps.check_bindings_exist.outputs.bindings_exist }} == 'true'
      run: nix develop --command cargo run --bin cec_bindgen
      shell: bash

    - name: Commit bindings
      if: ${{ steps.check_bindings_exist.outputs.bindings_exist }} == 'true'
      uses: EndBug/add-and-commit@v9
      with:
        add: cec_sys/src/bindings/${{ inputs.target }}.rs
        message: Update ${{ inputs.target }} libcec bindings
        pathspec_error_handling: exitImmediately
